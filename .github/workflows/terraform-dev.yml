name: 'Terraform - Dev'

on:
  pull_request:
    branches: [ "dev" ]

permissions:
  contents: read

jobs:
  # Scan repository for secrets using Gitleaks
  secrets-scan:
    name: 'Secrets Scan'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Gitleaks # Detect hardcoded secrets in all files, including Terraform
        uses: gitleaks/gitleaks-action@v2
        with:
          args: "--source=. --verbose"

  # Run Checkov for static code analysis of Terraform files
  checkov:
    name: 'Checkov Scan'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Checkov # Static analysis for Terraform security and compliance
        uses: bridgecrewio/checkov-action@v12
        with:
          directory: ./tf/environments/dev

  # Run TFSec for static analysis of Terraform files
  tfsec:
    name: 'TFSec Scan'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run TFSec # Security scanner for Terraform code
        uses: aquasecurity/tfsec-action@v1.0.3
        with:
          working_directory: ./tf/environments/dev

  terratest:
    name: 'Terratest'
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Go # Install Go for running Terratest
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
      - name: Install dependencies # Install Go dependencies for tests
        run: go mod tidy
        working-directory: ./test
      - name: Run Terratest # Run Terratest integration tests
        run: go test -v ./...
        working-directory: ./test

  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    needs: [checkov, tfsec, secrets-scan, terratest ]
    environment: 
      name: dev
      # Requires environment protection rules (required reviewers) in GitHub repo settings

    defaults:
      run:
        shell: bash

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v4
      # Set up the Azure credentials for authentication
      - name: Login to Azure # Authenticate to Azure for Terraform
        uses: azure/login@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
      - name: Terraform Init # Initialize Terraform working directory
        id: init
        run: terraform init
        working-directory: ./tf/environments/dev
      - name: Terraform Validate # Validate Terraform configuration
        run: terraform validate -no-color
        working-directory: ./tf/environments/dev
      - name: Terraform Plan # Generate Terraform execution plan
        run: terraform plan -input=false
        working-directory: ./tf/environments/dev
      # Only apply on PRs (after all checks/tests)
      - name: Terraform Apply # Apply Terraform changes
        run: terraform apply -auto-approve -input=false
        working-directory: ./tf/environments/dev

  pr-review:
    name: 'Automate PR Review'
    runs-on: ubuntu-latest
    needs: [terraform]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Add PR Review Comment
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: "Automated review: All checks have passed and this PR is ready for further review or merge."
      - name: Add PR Review Comment
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: "Automated review: All checks have passed and this PR is ready for further review or merge."
