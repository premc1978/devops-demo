name: 'Terraform - Prod'

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    # Only allow PRs where the source branch is 'dev'
    types: [opened, synchronize, reopened]
    paths-ignore: []
    # GitHub Actions does not natively filter PR source branches, so add a job-level condition below

permissions:
  contents: read

jobs:
  # ...existing code for secrets-scan, checkov, tfsec if present...

  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    needs: [checkov, tfsec]
    environment: 
      name: prod
      # Requires environment protection rules (required reviewers) in GitHub repo settings

    defaults:
      run:
        shell: bash

    steps:
      # ...copy and adapt terraform steps, set working-directory to ./tf/environments/prod ...
      - name: Checkout
        uses: actions/checkout@v4
      # ...other steps...
      - name: Terraform Init # Initialize Terraform working directory
        id: init
        run: terraform init
        working-directory: ./tf/environments/prod
      # ...other steps...
      - name: Terraform Apply # Apply Terraform changes
        run: terraform apply -auto-approve -input=false
        working-directory: ./tf/environments/prod
    # Add a condition to only run if PR is from dev to main
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && startsWith(github.head_ref, 'dev'))

  terratest:
    name: 'Terratest'
    runs-on: ubuntu-latest
    needs: terraform
    environment: prod

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Go # Install Go for running Terratest
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
      - name: Install dependencies # Install Go dependencies for tests
        run: go mod tidy
        working-directory: ./test
      - name: Run Terratest # Run Terratest integration tests
        run: go test -v ./...
        working-directory: ./test
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && startsWith(github.head_ref, 'dev'))

  pr-review:
    name: 'Automate PR Review'
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && startsWith(github.head_ref, 'dev')
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Approve Pull Request
        uses: hmarr/auto-approve-action@v3
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      - name: Add PR Review Comment
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: "Automated review: All checks have passed and this PR is ready for further review or merge."
