name: 'Terraform - Other Branches'

on:
  push:
    branches-ignore: [ "main", "dev", "qa" ]
  pull_request:
    branches-ignore: [ "main", "dev", "qa" ]

permissions:
  contents: read

env:
  TF_ENV: sandbox
  TF_TEST_DIR: ./tf/environments/sandbox
  TF_VAR_FILE: ./tf/environments/sandbox/terraform.tfvars

jobs:
  secrets-scan:
    name: 'Secrets Scan'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        with:
          args: "--source=. --verbose"

  checkov:
    name: 'Checkov Scan'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Run Checkov
        uses: bridgecrewio/checkov-action@v12
        with:
          directory: ./tf/environments/sandbox # or a default path

  tfsec:
    name: 'TFSec Scan'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Run TFSec
        uses: aquasecurity/tfsec-action@v1.0.3
        with:
          working_directory: ./tf/environments/sandbox # or a default path

  sonarqube:
    name: 'SonarQube Scan'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '11'
      - name: Run SonarScanner (Docker)
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
        run: |
          docker run --rm \
            -e SONAR_HOST_URL="$SONAR_HOST_URL" \
            -e SONAR_LOGIN="$SONAR_TOKEN" \
            -v "${{ github.workspace }}:/usr/src" \
            sonarsource/sonar-scanner-cli \
            -Dsonar.projectKey="$SONAR_PROJECT_KEY" \
            -Dsonar.sources=. \
            -Dsonar.host.url="$SONAR_HOST_URL" \
            -Dsonar.login="$SONAR_TOKEN"

  terratest:
    name: 'Terratest'
    runs-on: ubuntu-latest
    needs: [sonarqube, checkov, tfsec]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to Azure # Authenticate to Azure for Terratest
        uses: azure/login@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
      - name: Install dependencies
        run: go mod tidy
        working-directory: ./test
      - name: Run Terratest
        env:
          TF_TEST_DIR: ${{ env.TF_TEST_DIR }}
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
        run: go test -v ./...
        working-directory: ./test
